# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.define "centos6" do |centos6|
    centos6.vm.box = "geerlingguy/centos6"
    # centos6.vm.box_check_update = false
    # centos6.vm.network "forwarded_port", guest: 80, host: 8080
    # centos6.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
    # centos6.vm.network "private_network", ip: "192.168.33.10"
    # centos6.vm.network "public_network"
    # centos6.vm.synced_folder "../data", "/vagrant_data"
    centos6.vm.provider "virtualbox" do |vb|
      #vb.gui = true
      vb.memory = "1024"
    end
    centos6.vm.provision "shell", inline: <<-SHELL
      ##yum update -y
      yum https://repo.ius.io/ius-release-el6.rpm
    SHELL
    centos6.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "pb-centos.yaml"
      # ansible.raw_arguments = ["--verbose"]
    end
  end

  config.vm.define "centos7" do |centos7|
    centos7.vm.box = "geerlingguy/centos7"
    # centos7.vm.box_check_update = false
    # centos7.vm.network "forwarded_port", guest: 80, host: 8080
    # centos7.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
    # centos7.vm.network "private_network", ip: "192.168.33.10"
    # centos7.vm.network "public_network"
    # centos7.vm.synced_folder "../data", "/vagrant_data"
    centos7.vm.provider "virtualbox" do |vb|
      #vb.gui = true
      vb.memory = "1024"
    end
    centos7.vm.provision "shell", inline: <<-SHELL
      ##yum update -y
      yum https://repo.ius.io/ius-release-el7.rpm
    SHELL
    centos7.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "pb-centos.yaml"
      # ansible.raw_arguments = ["--verbose"]
    end
  end

  config.vm.define "fedora" do |fedora|
    fedora.vm.box = "fedora/28-cloud-base"
    # fedora.vm.box_check_update = false
    # fedora.vm.network "forwarded_port", guest: 80, host: 8080
    # fedora.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
    # fedora.vm.network "private_network", ip: "192.168.33.10"
    # fedora.vm.network "public_network"
    # fedora.vm.synced_folder "../data", "/vagrant_data"
    fedora.vm.provider "virtualbox" do |vb|
      #vb.gui = true
      vb.memory = "1024"
    end
    fedora.vm.provision "shell", inline: <<-SHELL
      dnf install -y python
    SHELL
    fedora.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "pb-fedora.yaml"
      # ansible.raw_arguments = ["--verbose"]
    end
  end


  config.vm.define "ubuntu16" do |ubuntu16|
    ubuntu16.vm.box = "geerlingguy/ubuntu1604" # 16.04-needs python 
    # ubuntu16.vm.box_check_update = false
    # ubuntu16.vm.network "forwarded_port", guest: 80, host: 8080
    # ubuntu16.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
    # ubuntu16.vm.network "private_network", ip: "192.168.33.10"
    # ubuntu16.vm.network "public_network"
    # ubuntu16.vm.synced_folder "../data", "/vagrant_data"
    ubuntu16.vm.provider "virtualbox" do |vb|
      #vb.gui = true
      vb.memory = "1024"
    end
    ubuntu16.vm.provision "shell", inline: <<-SHELL
      apt-get install -y python
    SHELL
    ubuntu16.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "pb-ubuntu.yaml"
      # ansible.raw_arguments = ["--verbose"]
    end
  end

  config.vm.define "ubuntu18" do |ubuntu18|
    ubuntu18.vm.box = "geerlingguy/ubuntu1804" # python preinstalled
    ubuntu18.vm.provider "virtualbox" do |vb|
      #vb.gui = true
      vb.memory = "1024"
    end
    ubuntu18.vm.provision "shell", inline: <<-SHELL
      apt-get install -y python
    SHELL
    ubuntu18.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "pb-ubuntu.yaml"
      # ansible.raw_arguments = ["--verbose"]
    end


  config.vm.define "ubuntu20" do |ubuntu20|
    ubuntu20.vm.box = "geerlingguy/ubuntu2004" # python preinstalled
    ubuntu20.vm.provider "virtualbox" do |vb|
      #vb.gui = true
      vb.memory = "1024"
    end
    ubuntu20.vm.provision "shell", inline: <<-SHELL
      apt-get install -y python
    SHELL
    ubuntu20.vm.provision "ansible" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "pb-ubuntu.yaml"
    end

  end

end
